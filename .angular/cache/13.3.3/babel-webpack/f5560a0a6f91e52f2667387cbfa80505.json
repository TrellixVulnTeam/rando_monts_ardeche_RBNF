{"ast":null,"code":"import { SearchTreksService } from '@app/services/search-treks/search-treks.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nimport * as i2 from \"@app/services/online-treks/online-treks.service\";\nimport * as i3 from \"@app/services/offline-treks/offline-treks.service\";\nimport * as i4 from \"@app/services/search-treks/search-treks.service\";\nimport * as i5 from \"@angular/common\";\nimport * as i6 from \"@ngx-translate/core\";\n\nfunction SearchComponent_ion_list_14_ion_item_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-item\", 9);\n    i0.ɵɵlistener(\"click\", function SearchComponent_ion_list_14_ion_item_1_Template_ion_item_click_0_listener() {\n      const restoredCtx = i0.ɵɵrestoreView(_r6);\n      const trek_r4 = restoredCtx.$implicit;\n      const ctx_r5 = i0.ɵɵnextContext(2);\n      return ctx_r5.navigateToTrek(trek_r4.properties.id);\n    });\n    i0.ɵɵelementStart(1, \"ion-label\");\n    i0.ɵɵtext(2);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelement(3, \"ion-icon\", 10);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const trek_r4 = ctx.$implicit;\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate(trek_r4.properties.name);\n  }\n}\n\nfunction SearchComponent_ion_list_14_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-list\");\n    i0.ɵɵtemplate(1, SearchComponent_ion_list_14_ion_item_1_Template, 4, 1, \"ion-item\", 8);\n    i0.ɵɵpipe(2, \"slice\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(2, 1, ctx_r0.filteredTreks, 0, ctx_r0.currentMaxTreks));\n  }\n}\n\nfunction SearchComponent_ng_template_15_ion_col_2_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\");\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"search.noResult\"), \" \");\n  }\n}\n\nfunction SearchComponent_ng_template_15_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-grid\", 11)(1, \"ion-row\");\n    i0.ɵɵtemplate(2, SearchComponent_ng_template_15_ion_col_2_Template, 3, 3, \"ion-col\", 12);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.currentSearchValue);\n  }\n}\n\nexport let SearchComponent = /*#__PURE__*/(() => {\n  class SearchComponent {\n    constructor(modalCtrl, onlineTreks, offlineTreks, searchTreks, navParams) {\n      this.modalCtrl = modalCtrl;\n      this.onlineTreks = onlineTreks;\n      this.offlineTreks = offlineTreks;\n      this.searchTreks = searchTreks;\n      this.navParams = navParams;\n      this.filteredTreks = [];\n      this.treks = null;\n      this.treksByStep = 30;\n      this.currentMaxTreks = 30;\n    }\n\n    ngOnInit() {\n      const isOnline = this.navParams.get('isOnline');\n      const treksTool = isOnline ? this.onlineTreks : this.offlineTreks;\n      this.treksSubscription = treksTool.treks$.subscribe(treks => {\n        this.treks = treks;\n\n        if (this.treks) {\n          this.filteredTreks = this.searchTreks.search(this.treks.features, '');\n        }\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.treksSubscription) {\n        this.treksSubscription.unsubscribe();\n      }\n    }\n\n    close() {\n      this.modalCtrl.dismiss();\n    }\n\n    search(searchValue) {\n      this.currentSearchValue = searchValue.detail.value;\n\n      if (this.treks) {\n        this.filteredTreks = this.searchTreks.search(this.treks.features, searchValue.detail.value);\n      } else {\n        this.filteredTreks = [];\n      }\n    }\n\n    navigateToTrek(id) {\n      this.modalCtrl.dismiss(id);\n    }\n\n    expandTreks(infiniteScroll) {\n      if (this.currentMaxTreks < this.filteredTreks.length) {\n        if (this.currentMaxTreks + this.treksByStep > this.filteredTreks.length) {\n          this.currentMaxTreks = this.filteredTreks.length;\n        } else {\n          this.currentMaxTreks += this.treksByStep;\n        }\n      }\n\n      infiniteScroll.target.complete();\n    }\n\n  }\n\n  SearchComponent.ɵfac = function SearchComponent_Factory(t) {\n    return new (t || SearchComponent)(i0.ɵɵdirectiveInject(i1.ModalController), i0.ɵɵdirectiveInject(i2.OnlineTreksService), i0.ɵɵdirectiveInject(i3.OfflineTreksService), i0.ɵɵdirectiveInject(i4.SearchTreksService), i0.ɵɵdirectiveInject(i1.NavParams));\n  };\n\n  SearchComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: SearchComponent,\n    selectors: [[\"app-search\"]],\n    features: [i0.ɵɵProvidersFeature([SearchTreksService])],\n    decls: 19,\n    vars: 11,\n    consts: [[\"color\", \"primary\"], [\"slot\", \"start\"], [3, \"click\"], [\"size\", \"large\", \"slot\", \"start\", \"name\", \"close\"], [3, \"placeholder\", \"ionChange\"], [4, \"ngIf\", \"ngIfElse\"], [\"userMsg\", \"\"], [\"threshold\", \"100px\", 3, \"disabled\", \"ionInfinite\"], [\"class\", \"ion-activatable\", 3, \"click\", 4, \"ngFor\", \"ngForOf\"], [1, \"ion-activatable\", 3, \"click\"], [\"name\", \"arrow-forward-outline\", \"slot\", \"end\"], [\"fixed\", \"\", 1, \"flex-container\"], [4, \"ngIf\"]],\n    template: function SearchComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-buttons\", 1)(3, \"ion-button\", 2);\n        i0.ɵɵlistener(\"click\", function SearchComponent_Template_ion_button_click_3_listener() {\n          return ctx.close();\n        });\n        i0.ɵɵelement(4, \"ion-icon\", 3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(5, \"ion-title\");\n        i0.ɵɵtext(6);\n        i0.ɵɵpipe(7, \"uppercase\");\n        i0.ɵɵpipe(8, \"translate\");\n        i0.ɵɵelementEnd()();\n        i0.ɵɵelementStart(9, \"ion-toolbar\", 0)(10, \"ion-searchbar\", 4);\n        i0.ɵɵlistener(\"ionChange\", function SearchComponent_Template_ion_searchbar_ionChange_10_listener($event) {\n          return ctx.search($event);\n        });\n        i0.ɵɵpipe(11, \"translate\");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(12, \"ion-content\");\n        i0.ɵɵelementContainerStart(13);\n        i0.ɵɵtemplate(14, SearchComponent_ion_list_14_Template, 3, 5, \"ion-list\", 5);\n        i0.ɵɵtemplate(15, SearchComponent_ng_template_15_Template, 3, 1, \"ng-template\", null, 6, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementStart(17, \"ion-infinite-scroll\", 7);\n        i0.ɵɵlistener(\"ionInfinite\", function SearchComponent_Template_ion_infinite_scroll_ionInfinite_17_listener($event) {\n          return ctx.expandTreks($event);\n        });\n        i0.ɵɵelement(18, \"ion-infinite-scroll-content\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementContainerEnd();\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r1 = i0.ɵɵreference(16);\n\n        i0.ɵɵadvance(6);\n        i0.ɵɵtextInterpolate(i0.ɵɵpipeBind1(7, 5, i0.ɵɵpipeBind1(8, 7, \"search.title\")));\n        i0.ɵɵadvance(4);\n        i0.ɵɵpropertyInterpolate(\"placeholder\", i0.ɵɵpipeBind1(11, 9, \"search.placeholder\"));\n        i0.ɵɵadvance(4);\n        i0.ɵɵproperty(\"ngIf\", ctx.filteredTreks && ctx.filteredTreks.length > 0)(\"ngIfElse\", _r1);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"disabled\", !ctx.filteredTreks || ctx.currentMaxTreks === ctx.filteredTreks.length || ctx.filteredTreks.length < ctx.treksByStep);\n      }\n    },\n    directives: [i1.IonHeader, i1.IonToolbar, i1.IonButtons, i1.IonButton, i1.IonIcon, i1.IonTitle, i1.IonSearchbar, i1.TextValueAccessor, i1.IonContent, i5.NgIf, i1.IonList, i5.NgForOf, i1.IonItem, i1.IonLabel, i1.IonGrid, i1.IonRow, i1.IonCol, i1.IonInfiniteScroll, i1.IonInfiniteScrollContent],\n    pipes: [i5.UpperCasePipe, i6.TranslatePipe, i5.SlicePipe],\n    styles: [\"\"]\n  });\n  return SearchComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}