{"ast":null,"code":"import * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/services/offline-treks/offline-treks.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@angular/common\";\nimport * as i4 from \"@ngx-translate/core\";\n\nfunction ProgressComponent_div_3_div_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\", 5);\n    i0.ɵɵtext(1);\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(2, 1, \"trek.downloadAlert.firstDownload\"), \" \");\n  }\n}\n\nfunction ProgressComponent_div_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\");\n    i0.ɵɵtemplate(1, ProgressComponent_div_3_div_1_Template, 3, 3, \"div\", 3);\n    i0.ɵɵelementStart(2, \"div\");\n    i0.ɵɵtext(3);\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(5, \"div\");\n    i0.ɵɵelement(6, \"ion-progress-bar\", 4);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r0.willDownloadGlobalMedia);\n    i0.ɵɵadvance(2);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(4, 3, \"trek.downloadAlert.loading\"), \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵproperty(\"value\", ctx_r0.currentProgress);\n  }\n}\n\nfunction ProgressComponent_div_4_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"div\")(1, \"div\", 6);\n    i0.ɵɵelement(2, \"ion-spinner\", 7);\n    i0.ɵɵelementStart(3, \"div\", 8);\n    i0.ɵɵtext(4);\n    i0.ɵɵpipe(5, \"translate\");\n    i0.ɵɵelementEnd()()();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(4);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(5, 1, \"trek.downloadAlert.storage\"), \" \");\n  }\n}\n\nexport let ProgressComponent = /*#__PURE__*/(() => {\n  class ProgressComponent {\n    constructor(offlineTreks) {\n      this.offlineTreks = offlineTreks;\n      this.willDownloadGlobalMedia = true;\n    }\n\n    ngOnInit() {\n      this.willDownloadGlobalMedia = this.offlineTreks.willDownloadCommonMedia();\n      this.currentProgress$ = this.offlineTreks.currentProgressDownload$.subscribe(val => {\n        this.currentProgress = val;\n      });\n    }\n\n    ionViewWillLeave() {\n      this.currentProgress$.unsubscribe();\n    }\n\n  }\n\n  ProgressComponent.ɵfac = function ProgressComponent_Factory(t) {\n    return new (t || ProgressComponent)(i0.ɵɵdirectiveInject(i1.OfflineTreksService));\n  };\n\n  ProgressComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: ProgressComponent,\n    selectors: [[\"app-progress\"]],\n    decls: 5,\n    vars: 3,\n    consts: [[1, \"progress-container\"], [3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"class\", \"ion-margin-bottom\", 4, \"ngIf\"], [\"type\", \"determinate\", 3, \"value\"], [1, \"ion-margin-bottom\"], [2, \"display\", \"flex\", \"justify-content\", \"center\", \"align-items\", \"center\"], [\"name\", \"crescent\"], [2, \"margin-left\", \"12px\"]],\n    template: function ProgressComponent_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"div\", 0)(1, \"ion-card\")(2, \"ion-card-content\", 1);\n        i0.ɵɵtemplate(3, ProgressComponent_div_3_Template, 7, 5, \"div\", 2);\n        i0.ɵɵtemplate(4, ProgressComponent_div_4_Template, 6, 3, \"div\", 2);\n        i0.ɵɵelementEnd()()();\n      }\n\n      if (rf & 2) {\n        i0.ɵɵadvance(2);\n        i0.ɵɵproperty(\"ngSwitch\", ctx.currentProgress !== 1);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", true);\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngSwitchCase\", false);\n      }\n    },\n    directives: [i2.IonCard, i2.IonCardContent, i3.NgSwitch, i3.NgSwitchCase, i3.NgIf, i2.IonProgressBar, i2.IonSpinner],\n    pipes: [i4.TranslatePipe],\n    styles: [\"\"]\n  });\n  return ProgressComponent;\n})();","map":null,"metadata":{},"sourceType":"module"}