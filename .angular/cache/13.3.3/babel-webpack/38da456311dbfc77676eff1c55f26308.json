{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { combineLatest } from 'rxjs';\nimport { cloneDeep } from 'lodash';\nimport { environment } from '@env/environment';\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/services/filter-treks/filter-treks.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@app/services/online-treks/online-treks.service\";\nimport * as i4 from \"@app/services/offline-treks/offline-treks.service\";\nimport * as i5 from \"@angular/router\";\nimport * as i6 from \"@app/services/settings/settings.service\";\nimport * as i7 from \"@angular/common\";\nimport * as i8 from \"@app/components/connect-error/connect-error.component\";\nimport * as i9 from \"@app/components/map-treks-viz/map-treks-viz.component\";\nimport * as i10 from \"@ngx-translate/core\";\n\nfunction TreksMapPage_ion_toolbar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r5 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-toolbar\")(1, \"ion-grid\", 4)(2, \"ion-row\")(3, \"ion-col\", 5)(4, \"ion-button\", 6);\n    i0.ɵɵlistener(\"click\", function TreksMapPage_ion_toolbar_4_Template_ion_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r4 = i0.ɵɵnextContext();\n      return ctx_r4.presentFilters();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ion-button\", 7);\n    i0.ɵɵlistener(\"click\", function TreksMapPage_ion_toolbar_4_Template_ion_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r5);\n      const ctx_r6 = i0.ɵɵnextContext();\n      return ctx_r6.presentSearch();\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(6, 3, \"toolbar.filters\"), \" \", ctx_r0.numberOfActiveFilters, \"\");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 5, \"toolbar.search\"), \"\");\n  }\n}\n\nfunction TreksMapPage_ng_container_7_app_connect_error_1_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r9 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-connect-error\", 9);\n    i0.ɵɵlistener(\"retry\", function TreksMapPage_ng_container_7_app_connect_error_1_Template_app_connect_error_retry_0_listener() {\n      i0.ɵɵrestoreView(_r9);\n      const ctx_r8 = i0.ɵɵnextContext(2);\n      return ctx_r8.loadTreks();\n    });\n    i0.ɵɵpipe(1, \"translate\");\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(1, 3, \"error.title\"))(\"content\", i0.ɵɵpipeBind1(2, 5, \"error.TreksMap\"))(\"buttonText\", i0.ɵɵpipeBind1(3, 7, \"error.buttonText\"));\n  }\n}\n\nfunction TreksMapPage_ng_container_7_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵtemplate(1, TreksMapPage_ng_container_7_app_connect_error_1_Template, 4, 9, \"app-connect-error\", 8);\n    i0.ɵɵpipe(2, \"async\");\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r1 = i0.ɵɵnextContext();\n\n    const _r2 = i0.ɵɵreference(9);\n\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", i0.ɵɵpipeBind1(2, 2, ctx_r1.onlineTreks.onlineTreksError$))(\"ngIfElse\", _r2);\n  }\n}\n\nfunction TreksMapPage_ng_template_8_app_map_treks_viz_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r12 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"app-map-treks-viz\", 14);\n    i0.ɵɵlistener(\"navigateToTrek\", function TreksMapPage_ng_template_8_app_map_treks_viz_0_Template_app_map_treks_viz_navigateToTrek_0_listener($event) {\n      i0.ɵɵrestoreView(_r12);\n      const ctx_r11 = i0.ɵɵnextContext(2);\n      return ctx_r11.navigateToTrek($event);\n    });\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r10 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"offline\", ctx_r10.offline)(\"filteredTreks\", ctx_r10.filteredTreks)(\"mapConfig\", ctx_r10.mapConfig)(\"dataSettings\", ctx_r10.settings.data$.value)(\"commonSrc\", ctx_r10.commonSrc);\n  }\n}\n\nfunction TreksMapPage_ng_template_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreksMapPage_ng_template_8_app_map_treks_viz_0_Template, 1, 5, \"app-map-treks-viz\", 10);\n    i0.ɵɵelementStart(1, \"ion-fab\", 11)(2, \"ion-fab-button\", 12);\n    i0.ɵɵelement(3, \"ion-icon\", 13);\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r3 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", ctx_r3.canDisplayMap);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"routerLink\", ctx_r3.treksUrl);\n  }\n}\n\nexport let TreksMapPage = /*#__PURE__*/(() => {\n  class TreksMapPage {\n    constructor(filterTreks, modalController, onlineTreks, offlineTreks, router, route, settings, platform) {\n      this.filterTreks = filterTreks;\n      this.modalController = modalController;\n      this.onlineTreks = onlineTreks;\n      this.offlineTreks = offlineTreks;\n      this.router = router;\n      this.route = route;\n      this.settings = settings;\n      this.platform = platform;\n      this.appName = environment.appName;\n      this.canDisplayMap = false;\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (!this.treksTool) {\n          this.offline = !!this.route.snapshot.data['offline'];\n          this.treksTool = this.offline ? this.offlineTreks : this.onlineTreks;\n          this.treksUrl = this.treksTool.getTreksUrl();\n          this.mapConfig = cloneDeep(this.offline && (this.platform.is('ios') || this.platform.is('android')) ? environment.offlineMapConfig : environment.onlineMapConfig);\n          this.commonSrc = yield this.treksTool.getCommonImgSrc();\n        }\n\n        const filteredTreks$ = this.offline ? this.offlineTreks.filteredTreks$ : this.onlineTreks.filteredTreks$;\n        this.mergeFiltersTreks$ = combineLatest([filteredTreks$, this.filterTreks.activeFiltersNumber$]).subscribe(([filteredTreks, numberOfActiveFilters]) => {\n          this.numberOfActiveFilters = numberOfActiveFilters === 0 ? '' : `(${numberOfActiveFilters})`;\n          this.filteredTreks = filteredTreks;\n        });\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.mergeFiltersTreks$) {\n        this.mergeFiltersTreks$.unsubscribe();\n      }\n    }\n\n    ionViewWillEnter() {\n      this.canDisplayMap = true;\n    }\n\n    presentFilters() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: FiltersComponent,\n          componentProps: {\n            isOnline: !this.offline\n          },\n          cssClass: 'full-size'\n        });\n        yield modal.present();\n      });\n    }\n\n    presentSearch() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: SearchComponent,\n          componentProps: {\n            isOnline: !this.offline\n          },\n          cssClass: 'full-size'\n        });\n        yield modal.present();\n        const {\n          data\n        } = yield modal.onDidDismiss();\n\n        if (data) {\n          this.navigateToTrek(data);\n        }\n      });\n    }\n\n    navigateToTrek(id) {\n      this.router.navigate([this.treksTool.getTrekDetailsUrl(id)]);\n    }\n\n    loadTreks() {\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    }\n\n  }\n\n  TreksMapPage.ɵfac = function TreksMapPage_Factory(t) {\n    return new (t || TreksMapPage)(i0.ɵɵdirectiveInject(i1.FilterTreksService), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i3.OnlineTreksService), i0.ɵɵdirectiveInject(i4.OfflineTreksService), i0.ɵɵdirectiveInject(i5.Router), i0.ɵɵdirectiveInject(i5.ActivatedRoute), i0.ɵɵdirectiveInject(i6.SettingsService), i0.ɵɵdirectiveInject(i2.Platform));\n  };\n\n  TreksMapPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TreksMapPage,\n    selectors: [[\"app-treks-map\"]],\n    features: [i0.ɵɵProvidersFeature([FilterTreksService])],\n    decls: 10,\n    vars: 6,\n    consts: [[\"color\", \"primary\"], [4, \"ngIf\"], [4, \"ngIf\", \"ngIfElse\"], [\"treksMap\", \"\"], [1, \"ion-no-padding\"], [1, \"vertical-center\", \"ion-margin-start\"], [\"color\", \"light\", \"size\", \"small\", 1, \"custom-button\", 3, \"click\"], [\"color\", \"light\", \"size\", \"small\", 1, \"custom-button\", \"ion-margin-start\", 3, \"click\"], [\"icon\", \"wifi\", 3, \"title\", \"content\", \"buttonText\", \"retry\", 4, \"ngIf\", \"ngIfElse\"], [\"icon\", \"wifi\", 3, \"title\", \"content\", \"buttonText\", \"retry\"], [3, \"offline\", \"filteredTreks\", \"mapConfig\", \"dataSettings\", \"commonSrc\", \"navigateToTrek\", 4, \"ngIf\"], [\"vertical\", \"bottom\", \"horizontal\", \"end\", \"slot\", \"fixed\"], [1, \"no-outline\", 3, \"routerLink\"], [\"name\", \"reorder-four-outline\"], [3, \"offline\", \"filteredTreks\", \"mapConfig\", \"dataSettings\", \"commonSrc\", \"navigateToTrek\"]],\n    template: function TreksMapPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(4, TreksMapPage_ion_toolbar_4_Template, 10, 7, \"ion-toolbar\", 1);\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(6, \"ion-content\");\n        i0.ɵɵtemplate(7, TreksMapPage_ng_container_7_Template, 3, 4, \"ng-container\", 2);\n        i0.ɵɵtemplate(8, TreksMapPage_ng_template_8_Template, 4, 2, \"ng-template\", null, 3, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r2 = i0.ɵɵreference(9);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.appName, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", !i0.ɵɵpipeBind1(5, 4, ctx.onlineTreks.onlineTreksError$) && !ctx.offline || ctx.offline && ctx.filteredTreks && ctx.filteredTreks.length > 0);\n        i0.ɵɵadvance(3);\n        i0.ɵɵproperty(\"ngIf\", !ctx.offline)(\"ngIfElse\", _r2);\n      }\n    },\n    directives: [i2.IonHeader, i2.IonToolbar, i2.IonTitle, i7.NgIf, i2.IonGrid, i2.IonRow, i2.IonCol, i2.IonButton, i2.IonContent, i8.ConnectErrorComponent, i9.MapTreksVizComponent, i2.IonFab, i2.IonFabButton, i2.RouterLinkDelegate, i5.RouterLink, i2.IonIcon],\n    pipes: [i7.AsyncPipe, i10.TranslatePipe],\n    styles: [\".custom-button[_ngcontent-%COMP%]{width:100px;text-transform:capitalize}.vertical-center[_ngcontent-%COMP%]{display:flex;align-items:center}\"]\n  });\n  return TreksMapPage;\n})();","map":null,"metadata":{},"sourceType":"module"}