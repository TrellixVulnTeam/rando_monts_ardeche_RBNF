{"ast":null,"code":"import { __awaiter } from \"tslib\";\nimport { combineLatest } from 'rxjs';\nimport { environment } from '@env/environment';\nimport { InAppDisclosureComponent } from '@app/components/in-app-disclosure/in-app-disclosure.component';\nimport { FiltersComponent } from '@app/components/filters/filters.component';\nimport { SearchComponent } from '@app/components/search/search.component';\nimport { FilterTreksService } from '@app/services/filter-treks/filter-treks.service';\nimport { TreksOrderComponent } from '@app/components/treks-order/treks-order.component';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@app/services/filter-treks/filter-treks.service\";\nimport * as i2 from \"@ionic/angular\";\nimport * as i3 from \"@app/services/offline-treks/offline-treks.service\";\nimport * as i4 from \"@app/services/online-treks/online-treks.service\";\nimport * as i5 from \"@app/services/geolocate/geolocate.service\";\nimport * as i6 from \"@app/services/settings/settings.service\";\nimport * as i7 from \"@angular/router\";\nimport * as i8 from \"@ngx-translate/core\";\nimport * as i9 from \"@angular/common\";\nimport * as i10 from \"@app/components/trek-card/trek-card.component\";\nimport * as i11 from \"@app/components/connect-error/connect-error.component\";\nconst _c0 = [\"content\"];\n\nfunction TreksPage_ion_toolbar_4_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r6 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementStart(0, \"ion-toolbar\")(1, \"ion-grid\", 5)(2, \"ion-row\")(3, \"ion-col\", 6)(4, \"ion-button\", 7);\n    i0.ɵɵlistener(\"click\", function TreksPage_ion_toolbar_4_Template_ion_button_click_4_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r5 = i0.ɵɵnextContext();\n      return ctx_r5.presentFilters();\n    });\n    i0.ɵɵtext(5);\n    i0.ɵɵpipe(6, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(7, \"ion-button\", 8);\n    i0.ɵɵlistener(\"click\", function TreksPage_ion_toolbar_4_Template_ion_button_click_7_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r7 = i0.ɵɵnextContext();\n      return ctx_r7.presentSearch();\n    });\n    i0.ɵɵtext(8);\n    i0.ɵɵpipe(9, \"translate\");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(10, \"ion-col\", 9)(11, \"ion-button\", 10);\n    i0.ɵɵlistener(\"click\", function TreksPage_ion_toolbar_4_Template_ion_button_click_11_listener($event) {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r8 = i0.ɵɵnextContext();\n      return ctx_r8.showTreksOrder($event);\n    });\n    i0.ɵɵelement(12, \"ion-icon\", 11);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(13, \"ion-button\", 10);\n    i0.ɵɵlistener(\"click\", function TreksPage_ion_toolbar_4_Template_ion_button_click_13_listener() {\n      i0.ɵɵrestoreView(_r6);\n      const ctx_r9 = i0.ɵɵnextContext();\n      return ctx_r9.changeColSize();\n    });\n    i0.ɵɵelement(14, \"ion-icon\", 12);\n    i0.ɵɵelementEnd()()()()();\n  }\n\n  if (rf & 2) {\n    const ctx_r0 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵtextInterpolate2(\" \", i0.ɵɵpipeBind1(6, 4, \"toolbar.filters\"), \" \", ctx_r0.numberOfActiveFilters, \" \");\n    i0.ɵɵadvance(3);\n    i0.ɵɵtextInterpolate1(\" \", i0.ɵɵpipeBind1(9, 6, \"toolbar.search\"), \" \");\n    i0.ɵɵadvance(6);\n    i0.ɵɵproperty(\"name\", ctx_r0.colSize === 12 ? \"apps\" : \"reorder-four-outline\");\n  }\n}\n\nfunction TreksPage_ng_container_9_h1_5_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\", 22);\n    i0.ɵɵtext(1, \" treks.numberOftrek \");\n    i0.ɵɵelementEnd();\n  }\n}\n\nfunction TreksPage_ng_container_9_h1_6_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"h1\");\n    i0.ɵɵtext(1);\n    i0.ɵɵelementStart(2, \"span\", 22);\n    i0.ɵɵtext(3, \"treks.numberOftreks\");\n    i0.ɵɵelementEnd()();\n  }\n\n  if (rf & 2) {\n    const ctx_r11 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵtextInterpolate1(\" \", ctx_r11.filteredTreks.length, \" \");\n  }\n}\n\nfunction TreksPage_ng_container_9_ion_col_8_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-col\", 23);\n    i0.ɵɵelement(1, \"app-trek-card\", 24);\n    i0.ɵɵelementEnd();\n  }\n\n  if (rf & 2) {\n    const trek_r13 = ctx.$implicit;\n    const ctx_r12 = i0.ɵɵnextContext(2);\n    i0.ɵɵproperty(\"size\", ctx_r12.colSize)(\"sizeMd\", ctx_r12.getMdColSize());\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"showAllData\", ctx_r12.colSize === 12)(\"trek\", trek_r13)(\"offline\", ctx_r12.offline);\n  }\n}\n\nconst _c1 = function (a0) {\n  return [a0];\n};\n\nfunction TreksPage_ng_container_9_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r15 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-list\")(2, \"ion-grid\", 13)(3, \"ion-row\", 14)(4, \"ion-text\");\n    i0.ɵɵtemplate(5, TreksPage_ng_container_9_h1_5_Template, 2, 0, \"h1\", 15);\n    i0.ɵɵtemplate(6, TreksPage_ng_container_9_h1_6_Template, 4, 1, \"h1\", 1);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(7, \"ion-row\", 16);\n    i0.ɵɵtemplate(8, TreksPage_ng_container_9_ion_col_8_Template, 2, 5, \"ion-col\", 17);\n    i0.ɵɵpipe(9, \"slice\");\n    i0.ɵɵelementEnd()()();\n    i0.ɵɵelementStart(10, \"ion-infinite-scroll\", 18);\n    i0.ɵɵlistener(\"ionInfinite\", function TreksPage_ng_container_9_Template_ion_infinite_scroll_ionInfinite_10_listener($event) {\n      i0.ɵɵrestoreView(_r15);\n      const ctx_r14 = i0.ɵɵnextContext();\n      return ctx_r14.expandTreks($event);\n    });\n    i0.ɵɵelement(11, \"ion-infinite-scroll-content\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementStart(12, \"ion-fab\", 19)(13, \"ion-fab-button\", 20);\n    i0.ɵɵelement(14, \"ion-icon\", 21);\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r2 = i0.ɵɵnextContext();\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.filteredTreks.length === 1);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngIf\", ctx_r2.filteredTreks.length > 1);\n    i0.ɵɵadvance(2);\n    i0.ɵɵproperty(\"ngForOf\", i0.ɵɵpipeBind3(9, 5, ctx_r2.filteredTreks, 0, ctx_r2.currentMaxTreks))(\"ngForTrackBy\", ctx_r2.trackTrek);\n    i0.ɵɵadvance(5);\n    i0.ɵɵproperty(\"routerLink\", i0.ɵɵpureFunction1(9, _c1, ctx_r2.mapLink));\n  }\n}\n\nfunction TreksPage_ng_template_10_ng_container_0_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r20 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"app-connect-error\", 26);\n    i0.ɵɵlistener(\"retry\", function TreksPage_ng_template_10_ng_container_0_Template_app_connect_error_retry_1_listener() {\n      i0.ɵɵrestoreView(_r20);\n      const ctx_r19 = i0.ɵɵnextContext(2);\n      return ctx_r19.loadTreks();\n    });\n    i0.ɵɵpipe(2, \"translate\");\n    i0.ɵɵpipe(3, \"translate\");\n    i0.ɵɵpipe(4, \"translate\");\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"title\", i0.ɵɵpipeBind1(2, 3, \"error.title\"))(\"content\", i0.ɵɵpipeBind1(3, 5, \"error.contentTreks\"))(\"buttonText\", i0.ɵɵpipeBind1(4, 7, \"error.buttonText\"));\n  }\n}\n\nfunction TreksPage_ng_template_10_ng_template_1_ng_container_2_Template(rf, ctx) {\n  if (rf & 1) {\n    const _r24 = i0.ɵɵgetCurrentView();\n\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-row\")(2, \"ion-col\", 22);\n    i0.ɵɵtext(3, \" treks.noOfflineResults \");\n    i0.ɵɵelementEnd()();\n    i0.ɵɵelementStart(4, \"ion-row\")(5, \"ion-col\")(6, \"ion-button\", 29);\n    i0.ɵɵlistener(\"click\", function TreksPage_ng_template_10_ng_template_1_ng_container_2_Template_ion_button_click_6_listener() {\n      i0.ɵɵrestoreView(_r24);\n      const ctx_r23 = i0.ɵɵnextContext(3);\n      return ctx_r23.resetFilters();\n    });\n    i0.ɵɵelementStart(7, \"span\", 22);\n    i0.ɵɵtext(8, \" treks.showAllTreks \");\n    i0.ɵɵelementEnd()()()();\n    i0.ɵɵelementContainerEnd();\n  }\n}\n\nfunction TreksPage_ng_template_10_ng_template_1_ion_row_3_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-row\")(1, \"ion-col\")(2, \"span\", 22);\n    i0.ɵɵtext(3, \" treks.emptyOfflineTreks \");\n    i0.ɵɵelementEnd()()();\n  }\n}\n\nfunction TreksPage_ng_template_10_ng_template_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelementStart(1, \"ion-grid\", 27);\n    i0.ɵɵtemplate(2, TreksPage_ng_template_10_ng_template_1_ng_container_2_Template, 9, 0, \"ng-container\", 28);\n    i0.ɵɵtemplate(3, TreksPage_ng_template_10_ng_template_1_ion_row_3_Template, 4, 0, \"ion-row\", 28);\n    i0.ɵɵelementEnd();\n    i0.ɵɵelementContainerEnd();\n  }\n\n  if (rf & 2) {\n    const ctx_r18 = i0.ɵɵnextContext(2);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitch\", ctx_r18.nbOfflineTreks > 0);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", true);\n    i0.ɵɵadvance(1);\n    i0.ɵɵproperty(\"ngSwitchCase\", false);\n  }\n}\n\nfunction TreksPage_ng_template_10_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵtemplate(0, TreksPage_ng_template_10_ng_container_0_Template, 5, 9, \"ng-container\", 3);\n    i0.ɵɵtemplate(1, TreksPage_ng_template_10_ng_template_1_Template, 4, 3, \"ng-template\", null, 25, i0.ɵɵtemplateRefExtractor);\n  }\n\n  if (rf & 2) {\n    const _r17 = i0.ɵɵreference(2);\n\n    const ctx_r4 = i0.ɵɵnextContext();\n    i0.ɵɵproperty(\"ngIf\", !ctx_r4.offline)(\"ngIfElse\", _r17);\n  }\n}\n\nexport let TreksPage = /*#__PURE__*/(() => {\n  class TreksPage {\n    constructor(filterTreks, modalController, offlineTreks, onlineTreks, geolocate, settings, route, router, platform, popoverController, translate, alertController) {\n      this.filterTreks = filterTreks;\n      this.modalController = modalController;\n      this.offlineTreks = offlineTreks;\n      this.onlineTreks = onlineTreks;\n      this.geolocate = geolocate;\n      this.settings = settings;\n      this.route = route;\n      this.router = router;\n      this.platform = platform;\n      this.popoverController = popoverController;\n      this.translate = translate;\n      this.alertController = alertController;\n      this.appName = environment.appName;\n      this.treksByStep = environment.treksByStep;\n      this.colSize = environment.colSize;\n      this.nbOfflineTreks = 0;\n      this.offline = false;\n      this.currentMaxTreks = environment.treksByStep;\n    }\n\n    ngOnInit() {\n      return __awaiter(this, void 0, void 0, function* () {\n        yield this.handleInitialOrder();\n\n        if (!this.treksTool) {\n          this.offline = !!this.route.snapshot.data['offline'];\n          this.treksTool = this.offline ? this.offlineTreks : this.onlineTreks;\n          this.mapLink = this.treksTool.getTreksMapUrl();\n        }\n\n        const filteredTreks$ = this.offline ? this.offlineTreks.filteredTreks$ : this.onlineTreks.filteredTreks$;\n        this.filteredTreksSubscription = combineLatest([filteredTreks$, this.filterTreks.activeFiltersNumber$, this.settings.data$]).subscribe(([filteredTreks, numberOfActiveFilters, settings]) => {\n          if (settings) {\n            this.numberOfActiveFilters = !!numberOfActiveFilters ? `(${numberOfActiveFilters})` : '';\n            this.filteredTreks = [...filteredTreks];\n            this.content.scrollToTop();\n          }\n        });\n        this.nbOfflineTreksSubscription = this.offlineTreks.treks$.subscribe(treks => {\n          this.nbOfflineTreks = !treks ? 0 : treks.features.length;\n        });\n      });\n    }\n\n    ngOnDestroy() {\n      if (this.filteredTreksSubscription) {\n        this.filteredTreksSubscription.unsubscribe();\n      }\n\n      if (this.nbOfflineTreksSubscription) {\n        this.nbOfflineTreksSubscription.unsubscribe();\n      }\n    }\n\n    handleInitialOrder() {\n      return __awaiter(this, void 0, void 0, function* () {\n        if (!this.settings.order$.value) {\n          if (environment.initialOrder === 'location') {\n            let currentPosition;\n            const shouldShowInAppDisclosure = yield this.geolocate.shouldShowInAppDisclosure();\n\n            try {\n              if (shouldShowInAppDisclosure) {\n                yield this.presentInAppDisclosure();\n              }\n\n              currentPosition = yield this.geolocate.getCurrentPosition();\n            } finally {\n              if (currentPosition) {\n                this.settings.saveOrderState(environment.initialOrder, [currentPosition.longitude, currentPosition.latitude]);\n              } else {\n                if (shouldShowInAppDisclosure) {\n                  yield this.presentGeolocateError();\n                }\n\n                this.settings.saveOrderState('alphabetical');\n              }\n            }\n          } else {\n            this.settings.saveOrderState(environment.initialOrder);\n          }\n        }\n      });\n    }\n\n    expandTreks(infiniteScroll) {\n      if (this.currentMaxTreks < this.filteredTreks.length) {\n        if (this.currentMaxTreks + this.treksByStep > this.filteredTreks.length) {\n          this.currentMaxTreks = this.filteredTreks.length;\n        } else {\n          this.currentMaxTreks += this.treksByStep;\n        }\n      }\n\n      infiniteScroll.target.complete();\n    }\n\n    changeColSize() {\n      this.colSize = this.colSize === 12 ? 6 : 12;\n      this.content.scrollToTop();\n    }\n\n    getMdColSize() {\n      return this.colSize / 2;\n    }\n\n    presentFilters() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: FiltersComponent,\n          componentProps: {\n            isOnline: !this.offline\n          },\n          cssClass: 'full-size'\n        });\n        yield modal.present();\n      });\n    }\n\n    presentSearch() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: SearchComponent,\n          componentProps: {\n            isOnline: !this.offline\n          },\n          cssClass: 'full-size'\n        });\n        yield modal.present();\n        const {\n          data\n        } = yield modal.onDidDismiss();\n\n        if (data) {\n          this.navigateToTrek(data);\n        }\n      });\n    }\n\n    navigateToTrek(id) {\n      this.router.navigate([this.treksTool.getTrekDetailsUrl(id)]);\n    }\n\n    resetFilters() {\n      this.settings.resetFilters();\n    }\n\n    trackTrek(index, element) {\n      return element ? element.properties.id : null;\n    }\n\n    showTreksOrder(event) {\n      return __awaiter(this, void 0, void 0, function* () {\n        const orders = [{\n          name: yield this.translate.get('toolbar.orderByAlphabet').toPromise(),\n          value: 'alphabetical'\n        }, {\n          name: yield this.translate.get('toolbar.orderByLocation').toPromise(),\n          value: 'location'\n        }, {\n          name: yield this.translate.get('toolbar.orderByRandom').toPromise(),\n          value: 'random'\n        }];\n        const popover = yield this.popoverController.create({\n          component: TreksOrderComponent,\n          event: event,\n          translucent: true,\n          componentProps: {\n            orders\n          }\n        });\n        yield popover.present();\n        const {\n          data\n        } = yield popover.onDidDismiss();\n\n        if (data && data.error) {\n          this.presentGeolocateError();\n        }\n      });\n    }\n\n    presentGeolocateError() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const errorTranslation = yield this.translate.get('geolocate.error').toPromise();\n        const alertLocation = yield this.alertController.create({\n          header: errorTranslation['header'],\n          subHeader: errorTranslation['subHeader'],\n          message: errorTranslation['message'],\n          buttons: [errorTranslation['confirmButton']]\n        });\n        yield alertLocation.present();\n        yield alertLocation.onDidDismiss();\n      });\n    }\n\n    loadTreks() {\n      this.settings.loadSettings();\n      this.onlineTreks.loadTreks();\n    }\n\n    presentInAppDisclosure() {\n      return __awaiter(this, void 0, void 0, function* () {\n        const modal = yield this.modalController.create({\n          component: InAppDisclosureComponent,\n          componentProps: {},\n          cssClass: 'full-size'\n        });\n        yield modal.present();\n        yield modal.onDidDismiss();\n      });\n    }\n\n  }\n\n  TreksPage.ɵfac = function TreksPage_Factory(t) {\n    return new (t || TreksPage)(i0.ɵɵdirectiveInject(i1.FilterTreksService), i0.ɵɵdirectiveInject(i2.ModalController), i0.ɵɵdirectiveInject(i3.OfflineTreksService), i0.ɵɵdirectiveInject(i4.OnlineTreksService), i0.ɵɵdirectiveInject(i5.GeolocateService), i0.ɵɵdirectiveInject(i6.SettingsService), i0.ɵɵdirectiveInject(i7.ActivatedRoute), i0.ɵɵdirectiveInject(i7.Router), i0.ɵɵdirectiveInject(i2.Platform), i0.ɵɵdirectiveInject(i2.PopoverController), i0.ɵɵdirectiveInject(i8.TranslateService), i0.ɵɵdirectiveInject(i2.AlertController));\n  };\n\n  TreksPage.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: TreksPage,\n    selectors: [[\"app-treks\"]],\n    viewQuery: function TreksPage_Query(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵviewQuery(_c0, 7);\n      }\n\n      if (rf & 2) {\n        let _t;\n\n        i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.content = _t.first);\n      }\n    },\n    features: [i0.ɵɵProvidersFeature([FilterTreksService])],\n    decls: 12,\n    vars: 8,\n    consts: [[\"color\", \"primary\"], [4, \"ngIf\"], [\"content\", \"\"], [4, \"ngIf\", \"ngIfElse\"], [\"noTreks\", \"\"], [1, \"ion-no-padding\"], [\"size\", \"auto\", 1, \"vertical-center\", \"ion-margin-start\"], [\"color\", \"light\", \"size\", \"small\", 1, \"custom-button\", 3, \"click\"], [\"color\", \"light\", \"size\", \"small\", 1, \"custom-button\", \"ion-margin-start\", 3, \"click\"], [1, \"ion-text-right\"], [\"fill\", \"clear\", \"color\", \"dark\", 1, \"toolbar-icon-button\", 3, \"click\"], [\"slot\", \"icon-only\", \"name\", \"swap-horizontal-outline\", \"size\", \"large\"], [\"size\", \"large\", 3, \"name\"], [\"fixed\", \"\"], [\"size\", \"12\", 1, \"ion-padding-start\"], [\"translate\", \"\", 4, \"ngIf\"], [1, \"ion-align-items-stretch\"], [3, \"size\", \"sizeMd\", 4, \"ngFor\", \"ngForOf\", \"ngForTrackBy\"], [\"threshold\", \"100px\", 3, \"ionInfinite\"], [\"vertical\", \"bottom\", \"horizontal\", \"end\", \"slot\", \"fixed\"], [1, \"no-outline\", 3, \"routerLink\"], [\"name\", \"globe\"], [\"translate\", \"\"], [3, \"size\", \"sizeMd\"], [3, \"showAllData\", \"trek\", \"offline\"], [\"noTreksOffline\", \"\"], [\"icon\", \"wifi\", 3, \"title\", \"content\", \"buttonText\", \"retry\"], [1, \"flex-container\", 3, \"ngSwitch\"], [4, \"ngSwitchCase\"], [\"color\", \"light\", 3, \"click\"]],\n    template: function TreksPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\", 0)(2, \"ion-title\");\n        i0.ɵɵtext(3);\n        i0.ɵɵelementEnd()();\n        i0.ɵɵtemplate(4, TreksPage_ion_toolbar_4_Template, 15, 8, \"ion-toolbar\", 1);\n        i0.ɵɵpipe(5, \"async\");\n        i0.ɵɵpipe(6, \"async\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(7, \"ion-content\", null, 2);\n        i0.ɵɵtemplate(9, TreksPage_ng_container_9_Template, 15, 11, \"ng-container\", 3);\n        i0.ɵɵtemplate(10, TreksPage_ng_template_10_Template, 3, 2, \"ng-template\", null, 4, i0.ɵɵtemplateRefExtractor);\n        i0.ɵɵelementEnd();\n      }\n\n      if (rf & 2) {\n        const _r3 = i0.ɵɵreference(11);\n\n        i0.ɵɵadvance(3);\n        i0.ɵɵtextInterpolate1(\" \", ctx.appName, \" \");\n        i0.ɵɵadvance(1);\n        i0.ɵɵproperty(\"ngIf\", (!i0.ɵɵpipeBind1(5, 4, ctx.onlineTreks.onlineTreksError$) || !i0.ɵɵpipeBind1(6, 6, ctx.settings.settingsError$)) && !ctx.offline || ctx.offline && ctx.nbOfflineTreks > 0);\n        i0.ɵɵadvance(5);\n        i0.ɵɵproperty(\"ngIf\", !!ctx.filteredTreks && ctx.filteredTreks.length > 0)(\"ngIfElse\", _r3);\n      }\n    },\n    directives: [i2.IonHeader, i2.IonToolbar, i2.IonTitle, i9.NgIf, i2.IonGrid, i2.IonRow, i2.IonCol, i2.IonButton, i2.IonIcon, i2.IonContent, i2.IonList, i2.IonText, i8.TranslateDirective, i9.NgForOf, i10.TrekCardComponent, i2.IonInfiniteScroll, i2.IonInfiniteScrollContent, i2.IonFab, i2.IonFabButton, i2.RouterLinkDelegate, i7.RouterLink, i11.ConnectErrorComponent, i9.NgSwitch, i9.NgSwitchCase],\n    pipes: [i9.AsyncPipe, i8.TranslatePipe, i9.SlicePipe],\n    styles: [\".list-mode-disabled[_ngcontent-%COMP%]{cursor:default;opacity:.5;pointer-events:none}.custom-button[_ngcontent-%COMP%]{width:100px;text-transform:capitalize}.vertical-center[_ngcontent-%COMP%]{display:flex;align-items:center}.toolbar-icon-button[_ngcontent-%COMP%]::part(native){font-size:10px}\"]\n  });\n  return TreksPage;\n})();","map":null,"metadata":{},"sourceType":"module"}